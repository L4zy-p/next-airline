import { useCallback, useState, useEffect } from "react";
import dayjs from 'dayjs'
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { FlightLogService } from "../src/flight-log";
import LogCard from "../src/LogCard";
import LogForm from "../src/LogForm";
// import BoardingPassCard from "../src/BoardingPassCard";

export default function Home() {
  const [logs, setLogs] = useState([]);
  const [langdingTime, setLandingTime] = useState({})

  const handleAddLog = useCallback(
    (log) => {
      logs.push(log);
      setLogs(logs);
    },
    [logs]
  );

  const getHourMinSec = (seconds) => {
    const duration = dayjs.duration(seconds, 'second')
    const h = duration.hours() || ''
    const m = duration.minutes() || ''
    const s = duration.seconds() || ''
    return `${h && `${h} hr `}${m && `${m} min `}${s && `${s} sec`}`
  }

  const avgTimeLanding = () => {
    const data = [...logs]
    let langdingTimeObject = {}
    data.forEach((d) => {
      if (d.type === 'arrival') {
        langdingTimeObject[d.passengerName] = {
          ...langdingTimeObject[d.passengerName],
          arrivalAirport: d?.airport,
          arrivalTimestemp: d?.timestamp,
          langingTime: langdingTimeObject?.[d.passengerName]?.departureTimestemp
            ? getHourMinSec(dayjs(d?.timestamp * 1000).diff(dayjs(langdingTimeObject?.[d.passengerName]?.departureTimestemp * 1000), 'second'))
            : null
        }
      } else {
        langdingTimeObject[d.passengerName] = {
          ...langdingTimeObject[d.passengerName],
          departureAirport: d?.airport,
          departureTimestemp: d?.timestamp,
          langingTime: langdingTimeObject?.[d.passengerName]?.arrivalTimestemp
            ? getHourMinSec(dayjs(langdingTimeObject?.[d.passengerName]?.arrivalTimestemp * 1000).diff(dayjs(d?.timestamp * 1000), 'second'))
            : null
        }
      }
    })
    setLandingTime({ ...langdingTimeObject })
  }

  const printAvg = () => {
    const data = { ...langdingTime }
    Object.keys(data)?.length > 0 && Object.keys(data)?.filter((key, i) =>
      data[key]?.arrivalTimestemp
    ).map((key) => console.log(
      'Passenger name: ',
      key,
      ' ',
      `${data[key]?.departureAirport} - ${data[key]?.arrivalAirport}: ${getHourMinSec(dayjs(data[key]?.arrivalTimestemp * 1000).diff(dayjs(data[key]?.departureTimestemp * 1000), 'second'))}`
    ))
  }

  useEffect(() => {
    const fetch = async () => {
      const data = await FlightLogService.getLogs()
      setLogs(data);
    };

    fetch();
  }, []);

  useEffect(() => {
    if (logs?.length > 0) {
      avgTimeLanding()
    }
  }, [logs])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next Airline!</a>
        </h1>
        <p className={styles.description}>
          Get started by editing{" "}
          <code className={styles.code}>pages/index.js</code>
        </p>
        <div className={styles.card} style={{ margin: 16, width: "100%" }}>
          <h2>Flight Logs</h2>
          <button onClick={printAvg}>Print avg time to console</button>
          <LogCard style={{ width: "100%" }} data={logs}></LogCard>
        </div>
        <div className={styles.card} style={{ margin: 16, width: "100%" }}>
          <h2>Departure Logging</h2>
          <LogForm
            style={{ width: "100%" }}
            data={logs}
            type={"departure"}
            onSubmit={handleAddLog}
          ></LogForm>
        </div>
        <div className={styles.card} style={{ margin: 16, width: "100%" }}>
          <h2>Arrival Logging</h2>
          <LogForm
            style={{ width: "100%" }}
            data={logs}
            type={"arrival"}
            onSubmit={handleAddLog}
          ></LogForm>
        </div>
        {/* Render boarding pass here */}
        {/* {[].map((_, i) => ( */}
        {/*   <BoardingPassCard key={i} /> */}
        {/* ))} */}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
